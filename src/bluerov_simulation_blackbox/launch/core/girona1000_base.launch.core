<launch>
    <arg name="robot_name" default="girona1000"/>
    <arg name="enable_gui" default="false"/>

    <!-- Config folder -->
    <arg name="config_folder" value="$(find cola2_girona1000)/sim_config"/>

    <!-- Common configs -->
    <rosparam command="load" ns="captain" file="$(arg config_folder)/captain.yaml"/>
    <rosparam command="load" ns="controller" file="$(arg config_folder)/controller.yaml"/>
    <rosparam command="load" ns="default_param_handler" file="$(arg config_folder)/default_param_handler.yaml"/>
    <rosparam command="load" ns="diagnostic_aggregator" file="$(arg config_folder)/diagnostic_aggregator.yaml"/>
    <rosparam command="load" ns="logitech_fx10_to_teleoperation" file="$(arg config_folder)/logitech_fx10_to_teleoperation.yaml"/>
    <rosparam command="load" ns="navigator" file="$(arg config_folder)/navigator.yaml"/>
    <rosparam command="load" ns="pilot" file="$(arg config_folder)/pilot.yaml"/>
    <rosparam command="load" ns="safe_depth_altitude" file="$(arg config_folder)/safe_depth_altitude.yaml"/>
    <rosparam command="load" ns="safety_supervisor" file="$(arg config_folder)/safety_supervisor.yaml"/>
    <rosparam command="load" ns="teleoperation" file="$(arg config_folder)/teleoperation.yaml"/>
    <rosparam command="load" ns="virtual_cage" file="$(arg config_folder)/virtual_cage.yaml"/>

    <!-- Simulation configs -->
    <rosparam command="load" ns="sim_internal_sensors" file="$(arg config_folder)/sim_internal_sensors.yaml"/>

    <!-- Safety nodes -->
    <node name="diagnostic_aggregator" pkg="diagnostic_aggregator" type="aggregator_node">
        <remap from="/diagnostics" to="/$(arg robot_name)/diagnostics"/>
        <remap from="/diagnostics_agg" to="/$(arg robot_name)/diagnostics_agg"/>
        <remap from="/diagnostics_toplevel_state" to="/$(arg robot_name)/diagnostics_toplevel_state"/>
    </node>
    <node name="safe_depth_altitude" pkg="cola2_safety" type="safe_depth_altitude_node" output="screen"/>
    <!-- <node name="safety_supervisor" pkg="cola2_safety" type="safety_supervisor_node" output="screen"/> -->
    <!-- <node name="safety_supervisor_checker" pkg="cola2_safety" type="safety_supervisor_checker_node" output="screen"/> -->
    <node name="virtual_cage" pkg="cola2_safety" type="virtual_cage_node" output="screen"/>
    <node name="watchdog_timer" pkg="cola2_safety" type="watchdog_timer_node" output="screen"/>

    <!-- Simulation nodes -->
    <node name="sim_internal_sensors" pkg="cola2_sim" type="sim_internal_sensors_node" output="screen"/>

    <!-- Navigation -->
    <!-- <node name="navigator" pkg="cola2_nav" type="navigator_node" output="screen"/> -->

    <!-- Control stack -->
    <node name="captain" pkg="cola2_control" type="captain_node" output="screen">
        <param name="vehicle_config_launch_mission_package" value="cola2_$(arg robot_name)"/>
    </node>
    <node name="controller" pkg="cola2_control" type="controller_node"/>
    <node name="pilot" pkg="cola2_control" type="pilot_node" output="screen"/>
    <node name="teleoperation" pkg="cola2_control" type="teleoperation_node" output="screen"/>
    <node name="test_thrusters" pkg="cola2_control" type="test_thrusters.py" output="screen"/>

    <!-- Log -->
    <node name="bag_recorder" pkg="cola2_log" type="bag_recorder_node.py" output="screen"/>
    <node name="computer_logger" pkg="cola2_log" type="computer_logger_node.py" respawn="true" output="screen"/>
    <node name="default_param_handler" pkg="cola2_log" type="default_param_handler_node.py" respawn="true" output="screen">
        <param name="config_folder" value="sim_config"/>
    </node>
    <node name="param_logger" pkg="cola2_log" type="param_logger_node.py" output="screen"/>

    <!-- Throttle messages -->
    <node name="navigation_throttle" pkg="topic_tools" type="throttle" args="messages navigator/navigation 4.0"/>
    <node name="odometry_throttle" pkg="topic_tools" type="throttle" args="messages navigator/odometry 4.0"/>
    <node name="merged_world_waypoint_req_throttle" pkg="topic_tools" type="throttle" args="messages controller/merged_world_waypoint_req 2.0"/>
    <node name="merged_body_velocity_req_throttle" pkg="topic_tools" type="throttle" args="messages controller/merged_body_velocity_req 2.0"/>
    <node name="merged_body_force_req_throttle" pkg="topic_tools" type="throttle" args="messages controller/merged_body_force_req 2.0"/>
    <node name="thruster_setpoints_throttle" pkg="topic_tools" type="throttle" args="messages setpoints_selector/thruster_setpoints 4.0"/>

    <!-- GUI mission interface -->
    <include if="$(arg enable_gui)" file="$(find rosbridge_server)/launch/rosbridge_tcp.launch">
        <arg name="port" value="9091"/>
    </include>
</launch>